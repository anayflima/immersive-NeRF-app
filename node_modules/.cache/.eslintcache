[{"/home/ana/Documents/hackathons/hackmit/immersive-NeRF-app/src/index.js":"1","/home/ana/Documents/hackathons/hackmit/immersive-NeRF-app/src/App.js":"2","/home/ana/Documents/hackathons/hackmit/immersive-NeRF-app/src/reportWebVitals.js":"3","/home/ana/Documents/hackathons/hackmit/immersive-NeRF-app/src/components/VideoInput.js":"4"},{"size":535,"mtime":1664688412715,"results":"5","hashOfConfig":"6"},{"size":1824,"mtime":1664711921919,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1664688412715,"results":"8","hashOfConfig":"6"},{"size":1182,"mtime":1664712014380,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"1x2vtxy",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/home/ana/Documents/hackathons/hackmit/immersive-NeRF-app/src/index.js",[],[],[],"/home/ana/Documents/hackathons/hackmit/immersive-NeRF-app/src/App.js",["24","25","26"],[],"/home/ana/Documents/hackathons/hackmit/immersive-NeRF-app/src/reportWebVitals.js",[],[],"/home/ana/Documents/hackathons/hackmit/immersive-NeRF-app/src/components/VideoInput.js",["27"],[],"import React from \"react\";\nimport \"./styles.css\";\nimport IconButton from '@mui/material/IconButton';\nimport UploadIcon from '@mui/icons-material/Upload';\n\nexport default function VideoInput(props) {\n  const { width, height } = props;\n\n  const inputRef = React.useRef();\n\n  const [source, setSource] = React.useState();\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    const url = URL.createObjectURL(file);\n    setSource(url);\n  };\n\n  const handleChoose = (event) => {\n    inputRef.current.click();\n  };\n\n  return (\n    <div className=\"VideoInput\">\n      <input\n        ref={inputRef}\n        className=\"VideoInput_input\"\n        type=\"file\"\n        onChange={handleFileChange}\n        accept=\".mov,.mp4\"\n      />\n      <p>\n      {!source &&\n        <IconButton variant=\"contained\" onClick={handleChoose}>\n          Upload a video\n        <UploadIcon />\n        </IconButton>}\n      </p>\n      {source && (\n        <video\n          className=\"VideoInput_video\"\n          width=\"100%\"\n          height={height}\n          controls\n          src={source}\n        />\n      )}\n      <div className=\"VideoInput_footer\">{source}</div>\n    </div>\n  );\n}\n",{"ruleId":"28","severity":1,"message":"29","line":1,"column":8,"nodeType":"30","messageId":"31","endLine":1,"endColumn":12},{"ruleId":"28","severity":1,"message":"32","line":2,"column":8,"nodeType":"30","messageId":"31","endLine":2,"endColumn":16},{"ruleId":"28","severity":1,"message":"33","line":5,"column":8,"nodeType":"30","messageId":"31","endLine":5,"endColumn":19},{"ruleId":"28","severity":1,"message":"34","line":7,"column":11,"nodeType":"30","messageId":"31","endLine":7,"endColumn":16},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'stingray' is defined but never used.","'headerImage' is defined but never used.","'width' is assigned a value but never used."]